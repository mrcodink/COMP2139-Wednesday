@* Indicate that the view expects a list of project objects as its model *@
@model List<Project>

@{
    ViewBag.Title = "Project Listing";
    Layout = "_Layout";

    bool searchPerformed = ViewData["SearchPerformed"] as bool? ?? false;
    string searchString = ViewData["SearchString"] as string;
}

<h2>Project Listing</h2>

<a asp-action="Create" class="btn btn-primary">Create New Project</a>
@if (Model.Any())
{
    // Iterate over projects
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Description</th>
                <th>Summary</th>
                <th>Actions</th>
            </tr>
        </thead>
        
        <tbody>
        @foreach (var project in Model)
        {
            <tr>
                <td>@project.ProjectId</td>
                <td>@Html.DisplayFor(model => project.ProjectName, "ProjectName")</td>
                <td>@Html.DisplayFor(model => project.ProjectDescription, "ProjectDescription")</td>
                <!-- Reusable View Component for Proj Summary -->
                <td>
                    @await Component.InvokeAsync("ProjectSummary", new {projectid = project.ProjectId} )
                </td>

                <td>
                    <a asp-action="Details" asp-route-id="@project.ProjectId" class="btn btn-info">Details</a>
                    <a asp-action="Edit" asp-route-id="@project.ProjectId" class="btn btn-secondary">Edit</a>
                    <a asp-action="Delete" asp-route-id="@project.ProjectId" class="btn btn-danger">Delete</a>
                    <a asp-controller="ProjectTask" asp-action="Index" asp-route-id="@project.ProjectId" class="btn btn-warning">View Tasks</a>
                    
                    
                    
                </td>
            </tr>
        }
        </tbody>
    
    </table>
    }
else
{
    if (searchPerformed)
    {
        <p>No Project with string "@searchString" were found</p>
    }
    else
    {
        <p>No projects available</p>
    }
    
}